name: Build and release binaries

on:
  workflow_dispatch:
    inputs:
      runner:
        required: false
        description: 'Runner image name'
        default: 'windows-2022'

jobs:
  build-1:
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install Python dependencies
        run: pip install Pillow

      - name: Init
        run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - name: Configure sccache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Run Build Script (Stage 1)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"

      - name: Upload Build State
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: chromium-build-state-x64
          path: C:\helium-windows\build\src
          retention-days: 1

  build-2:
    needs: build-1
    if: needs.build-1.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 2)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-3:
    needs: build-2
    if: needs.build-2.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 3)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-4:
    needs: build-3
    if: needs.build-3.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 4)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-5:
    needs: build-4
    if: needs.build-4.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 5)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-6:
    needs: build-5
    if: needs.build-5.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 6)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-7:
    needs: build-6
    if: needs.build-6.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 7)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-8:
    needs: build-7
    if: needs.build-7.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 8)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-9:
    needs: build-8
    if: needs.build-8.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 9)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-10:
    needs: build-9
    if: needs.build-9.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 10)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-11:
    needs: build-10
    if: needs.build-10.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 11)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-12:
    needs: build-11
    if: needs.build-11.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 12)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-13:
    needs: build-12
    if: needs.build-12.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 13)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-14:
    needs: build-13
    if: needs.build-13.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 14)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }
      - name: Upload Build State for Next Job
        if: steps.stage.outputs.finished == 'false'
        uses: actions/upload-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src, retention-days: 1 }

  build-15:
    needs: build-14
    if: needs.build-14.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 345
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - uses: mozilla-actions/sccache-action@v0.0.9
      - name: Download Build State
        uses: actions/download-artifact@v4
        with: { name: chromium-build-state-x64, path: C:\helium-windows\build\src }
      - name: Run Build Script (Stage 15)
        id: stage
        run: |
          $startTime = [int64](([datetime]::UtcNow).Ticks / 10000000 - (New-TimeSpan -Start (Get-Date "1970-01-01") -End (Get-Date).ToUniversalTime()).TotalSeconds)
          python build.py --ci $startTime
        working-directory: C:\helium-windows
        env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" }

  build-final:
    needs: [build-1, build-2, build-3, build-4, build-5,build-6,build-7,build-8,build-9,build-10,build-11,build-12,build-13,build-14, build-15]
    if: success() && (needs.build-1.outputs.finished == 'true' || needs.build-2.outputs.finished == 'true' || needs.build-3.outputs.finished == 'true' || needs.build-4.outputs.finished == 'true' || needs.build-5.outputs.finished == 'true' || needs.build-6.outputs.finished == 'true' || needs.build-7.outputs.finished == 'true' || needs.build-8.outputs.finished == 'true' || needs.build-9.outputs.finished == 'true' || needs.build-10.outputs.finished == 'true' || needs.build-11.outputs.finished == 'true' || needs.build-12.outputs.finished == 'true' || needs.build-13.outputs.finished == 'true' || needs.build-14.outputs.finished == 'true' || needs.build-15.outputs.finished == 'true')
    runs-on: ${{ github.event.inputs.runner }}
    outputs:
      version: ${{ steps.stage3.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.12' }
      - name: Install Python dependencies
        run: pip install Pillow
      - run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - name: Download Completed Build State
        uses: actions/download-artifact@v4
        with:
          name: chromium-build-state-x64
          path: C:\helium-windows\build\src
      - name: Build Helium installer
        id: stage2
        run: python build.py --build-installer
        working-directory: C:\helium-windows
      - name: Generate user-facing artifacts
        id: stage3
        run: python build.py --do-package
        working-directory: C:\helium-windows
      - name: Upload Release Packages
        uses: actions/upload-artifact@v4
        with:
          name: helium-release-packages-x64
          path: |
            C:\helium-windows\helium-*.zip
            C:\helium-windows\helium-*.exe

  publish-release:
    needs: build-final
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: helium-release-packages-x64
      - name: Publish release
        id: publish
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          prerelease: true
          name: ${{ needs.build-final.outputs.version || format('Helium Build {0}', github.run_number) }}
          tag_name: ${{ needs.build-final.outputs.version || format('build-{0}', github.run_number) }}
          files: |
            helium*
