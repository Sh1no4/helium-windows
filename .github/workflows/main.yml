#WT*

name: Build and release binaries

on:
  workflow_dispatch:
    inputs:
      runner:
        required: false
        description: 'Runner image name'
        default: 'windows-2022'

jobs:
  setup-source:
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Python dependencies for clone script
        run: pip install Pillow httplib2 PySocks
      - name: Init Workspace
        run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse

      - name: Cache Chromium Source Code
        id: cache-source
        uses: actions/cache@v4
        with:
          path: C:\helium-windows\build\src
          key: ${{ runner.os }}-chromium-source-${{ hashFiles('helium-chromium/utils/clone.py') }}-v2
          restore-keys: |
            ${{ runner.os }}-chromium-source-

      - name: Download Chromium Source (if cache missed)
        if: steps.cache-source.outputs.cache-hit != 'true'
        run: |
          python helium-chromium\utils\clone.py -o build\src -p win64
        working-directory: C:\helium-windows

  build-1:
    needs: setup-source
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Init Workspace
        run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - name: Restore Chromium Source from Cache
        uses: actions/cache@v4
        with:
          path: C:\helium-windows\build\src
          key: ${{ runner.os }}-chromium-source-${{ hashFiles('helium-chromium/utils/clone.py') }}
          restore-keys: |
            ${{ runner.os }}-chromium-source-
      - name: Install Action Dependencies
        run: npm install
        working-directory: ./.github/actions/stage
      - name: Configure sccache
        uses: mozilla-actions/sccache-action@v0.0.9
      - name: Run Stage 1
        id: stage
        uses: ./.github/actions/stage
        with:
          from_artifact: false
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"

  build-2:
    needs: build-1
    if: needs.build-1.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Init Workspace
        run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - name: Install Action Dependencies
        run: npm install
        working-directory: ./.github/actions/stage
      - name: Configure sccache
        uses: mozilla-actions/sccache-action@v0.0.9
      - name: Run Stage 2
        id: stage
        uses: ./.github/actions/stage
        with:
          from_artifact: true
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"

  build-3:
    needs: build-2
    if: needs.build-2.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Init Workspace
        run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - name: Install Action Dependencies
        run: npm install
        working-directory: ./.github/actions/stage
      - name: Configure sccache
        uses: mozilla-actions/sccache-action@v0.0.9
      - name: Run Stage 3
        id: stage
        uses: ./.github/actions/stage
        with:
          from_artifact: true
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"

  build-4:
    needs: build-3
    if: needs.build-3.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-5:
    needs: build-4
    if: needs.build-4.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-6:
    needs: build-5
    if: needs.build-5.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-7:
    needs: build-6
    if: needs.build-6.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-8:
    needs: build-7
    if: needs.build-7.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-9:
    needs: build-8
    if: needs.build-8.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-10:
    needs: build-9
    if: needs.build-9.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-11:
    needs: build-10
    if: needs.build-10.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-12:
    needs: build-11
    if: needs.build-11.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-13:
    needs: build-12
    if: needs.build-12.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-14:
    needs: build-13
    if: needs.build-13.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-15:
    needs: build-14
    if: needs.build-14.outputs.finished == 'false'
    runs-on: ${{ github.event.inputs.runner }}
    timeout-minutes: 360
    outputs:
      finished: ${{ steps.stage.outputs.finished }}
    steps:
      - { uses: actions/checkout@v4, with: { submodules: 'recursive' } }
      - { uses: actions/setup-python@v5, with: { python-version: '3.12' } }
      - { run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse }
      - { run: npm install, working-directory: ./.github/actions/stage }
      - { uses: mozilla-actions/sccache-action@v0.0.9 }
      - { id: stage, uses: ./.github/actions/stage, with: { from_artifact: true }, env: { SCCACHE_GHA_ENABLED: "true", RUSTC_WRAPPER: "sccache" } }

  build-final:
    needs: build-15
    if: success() && needs.build-15.outputs.finished == 'true'
    runs-on: ${{ github.event.inputs.runner }}
    outputs:
      version: ${{ steps.package.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Init Workspace
        run: Copy-Item -Path . -Destination "C:\helium-windows" -Recurse
      - name: Restore Chromium Source from Cache
        uses: actions/cache@v4
        with:
          path: C:\helium-windows\build\src
          key: ${{ runner.os }}-chromium-source-${{ hashFiles('helium-chromium/utils/clone.py') }}
          restore-keys: |
            ${{ runner.os }}-chromium-source-
      - name: Install Action Dependencies
        run: npm install
        working-directory: ./.github/actions/stage

      - name: Build Helium installer
        id: installer
        uses: ./.github/actions/stage
        with:
          from_artifact: true 
          gen_installer: true

      - name: Generate user-facing artifacts
        id: package
        uses: ./.github/actions/stage
        with:
          from_artifact: false 
          do_package: true

  publish-release:
    needs: build-final
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Download release packages
        uses: actions/download-artifact@v4
        with:
          name: helium-x86_64
      - name: Publish release
        id: publish
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          prerelease: true
          name: ${{ needs.build-final.outputs.version || format('Helium Build {0}', github.run_number) }}
          tag_name: ${{ needs.build-final.outputs.version || format('build-{0}', github.run_number) }}
          files: |
            helium*
